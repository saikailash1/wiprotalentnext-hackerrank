import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;


class Result {

    /*
     * Complete the 'getLargestString' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. STRING s
     *  2. INTEGER k
     */
    public static String getLargestString(String s, int k) {
    // Write your code here
    int n = s.length();
    int[] arr = new int[n];
    int count=0,fcount=0;
    String x="";
    for(int i=0;i<n;i++)
    {
        arr[i] = s.charAt(i);
    }
    for(int i=0;i<n;i++)
    {
        count=1;
        for(int j=i+1;j<i+2;i++)
        {
            if(arr[i] == arr[j])
            {
                count = count+1;
                x=s.substring(i,i+2);           
            }
            if(count==3)
                {
                   x = s.substring(0, i-1)+x;
                }

        }
    }
    return x;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String s = bufferedReader.readLine();

        int k = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.getLargestString(s, k);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}

