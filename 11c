public static int maxShared(int friendsNodes, List<Integer> friendsFrom, List<Integer> friendsTo, List<Integer> friendsWeight) {
        int size=friendsFrom.size();
        int[][] arr=new int[size][size];
        int[] arr1=new int[size];
        for(int i=0;i<size;i++){
                int x=friendsFrom.get(i);
                int y=friendsTo.get(i);
                arr[i][0]=x;
                arr[i][1]=y;
                arr1[i]=1;
        }
        for(int i=0;i<size;i++){
            for(int j=i+1;j<size;j++){
                if((arr[i][0]==arr[j][0] && arr[i][1]==arr[j][1]) || (arr[i][1]==arr[j][0] && arr[i][0]==arr[j][1])){
                    arr1[i]++;
                }
            }
        }
        int max=0;
        for(int i=0;i<size;i++){
            if(max<arr1[i]){
                max=arr1[i];
            }
        }
        List<Integer> f=new ArrayList<Integer>();
        for(int i=0;i<size;i++){
            if(arr1[i]==max){
                int z=arr[i][0]*arr[i][1];
                f.add(z);
            }
        }
        max=0;
        for(int i:f){
            if(max<i){
                max=i;
            }
        }
        return max;
    }
