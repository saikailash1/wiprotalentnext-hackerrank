import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



class Result {

    /*
     * Complete the 'countPerms' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER n as parameter.
     */

    public static int countPerms(int n) {
    // Write your code here
    char[] arr = s.toCharArray();
    int n=arr.length;
    int count=0;
    char[] arr2 = new char[n];
    for(int i=0;i<n;i++)
    {
        if(arr[i]=='a'&&arr[i+1]=='e')
        {
            arr2[i]=arr[0];
        }
         if(arr[i]=='e'&&((arr[i-1]=='o'||arr[i-1]=='u')&&(arr[i+1]=='a'||arr[i+1]=='i')))
        {
            continue;
        }
        else{
            arr2[i]=arr[i];
            count = count+1;
        }
         if(arr[i]=='i'&&((arr[i-1]=='o'||arr[i+1]=='a'||arr[i-1]=='u')&&(arr[i+1]=='u'||arr[i+1]=='a'||arr[i+1]=='e')))
        {
            continue;
        }
        else{
            arr2[i]=arr[i];
            count = count+1;
        }
         if(arr[i]=='o'&&((arr[i-1]=='u'||arr[i+1]=='e'||arr[i+1]=='a')&&(arr[i+1]=='i'||arr[i+1]=='u')))
        {
            continue;
        }
        else{
            arr2[i]=arr[i];
            count = count+1;
        }
         if(arr[i]=='u'&&((arr[i-1]=='e'||arr[i-1]=='i'||arr[i+1]=='a'||arr[i+1]=='o')&&(arr[i+1]=='a')))
        {
            continue;
        }
        else{
            arr2[i]=arr[i];
            count = count+1;
        }

    }
    return count;
    

    }

}

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        int result = Result.countPerms(n);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
